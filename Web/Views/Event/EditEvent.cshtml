@model BL.ViewModels.EventViewModel

@{
    ViewBag.Title = "EditEvent";
}


<div class="container">
    <div class="row">
        <div class="col">
            <div class="card my-2">
                <h2 class="text-center">Edit Event</h2>
                @using (Html.BeginForm("EditEvent", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)
                        @Html.HiddenFor(model => model.HostId)

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.HostId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.HostId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.TotalAvailableTickets, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TotalAvailableTickets, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TotalAvailableTickets, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <img style="max-width:500px" src="~/Content/@Model.image" />
                        <div class="form-group col-4">
                            Image
                            <div class="custom-file">
                                <input class="custom-file-input" type="file" name="file" id="file" />
                                <label class="custom-file-label" for="file">Choose a new image</label>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group text-center">
                            <div >
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
                
                <div class="text-center">
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
            
        </div>
    </div>
</div> 


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
